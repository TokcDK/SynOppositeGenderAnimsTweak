using Mutagen.Bethesda;
using Mutagen.Bethesda.Skyrim;
using Mutagen.Bethesda.Synthesis;

namespace SynOppositeGenderAnimsTweak
{
    public class Program
    {
        public static Lazy<Settings> PatchSettings = null!;
        public static async Task<int> Main(string[] args)
        {
            return await SynthesisPipeline.Instance
                .AddPatch<ISkyrimMod, ISkyrimModGetter>(RunPatch)
                .SetAutogeneratedSettings("Settings", "settings.json", out PatchSettings)
                .SetTypicalOpen(GameRelease.SkyrimLE, "SynOppositeGenderAnimsTweak.esp")
                .Run(args);
        }

        public static void RunPatch(IPatcherState<ISkyrimMod, ISkyrimModGetter> state)
        {
            // set local vars
            bool isCheckMales = PatchSettings.Value.IsCheckMales;
            bool isCheckFemales = PatchSettings.Value.IsCheckFemales;
            bool isOnlyUnique = PatchSettings.Value.IsOnlyUnique;
            var oppositeGenderAnimsFlag = NpcConfiguration.Flag.OppositeGenderAnims;
            var uniqueFlag = NpcConfiguration.Flag.Unique;
            var femaleFlag = NpcConfiguration.Flag.Female;
            bool isUseExcluded = PatchSettings.Value.ExcludedNPCKeywordsList.Count > 0;
            var excludedList = PatchSettings.Value.ExcludedNPCKeywordsList;
            bool isUseExcludedNpcList = excludedList.Count>0 && excludedList.Any(s => !string.IsNullOrWhiteSpace(s));

            foreach (var npcGetter in state.LoadOrder.PriorityOrder.Npc().WinningOverrides())
            {
                // skip invalid npcs
                if (npcGetter == null) continue; // null
                if(npcGetter.EditorID== "LashGraDushnikh")
                {

                }

                if (!npcGetter.Configuration.Flags.HasFlag(oppositeGenderAnimsFlag)) continue; // have no opposite gender anims flag

                Console.WriteLine($"1");
                bool isFemale = npcGetter.Configuration.Flags.HasFlag(femaleFlag);
                if (isFemale) if (!isCheckFemales) continue; // disabled females but npc is female
                else if (!isCheckMales) continue; // disabled males but npc is male

                Console.WriteLine($"2");
                if (isOnlyUnique && !npcGetter.Configuration.Flags.HasFlag(uniqueFlag)) continue; // need only unique but not unique
                if (isUseExcluded 
                    && !string.IsNullOrWhiteSpace(npcGetter.EditorID) 
                    && isUseExcludedNpcList
                    && excludedList.Contains(npcGetter.EditorID)) continue; // editor id contains one of keywords from exclusions

                Console.WriteLine($"3");
                npcGetter.ChechAndFixRaceHaveOppositeAnimation(state, isFemale);

                Console.WriteLine($"Remove opposite gender flag for '{npcGetter.FormKey.ID}|{npcGetter.EditorID}'");
                state.PatchMod.Npcs.GetOrAddAsOverride(npcGetter).Configuration.Flags &= ~oppositeGenderAnimsFlag;
            }
        }
    }
}
